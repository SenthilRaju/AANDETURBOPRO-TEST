package com.turborep.turbotracker.company.dao;

// Generated Jan 23, 2012 5:39:26 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Coaccount generated by hbm2java
 */
@Entity
@Table(name = "coAccount", catalog = "")
public class Coaccount implements java.io.Serializable {

	private Integer coAccountId;
	private Byte inActive;
	private String number;
	private String description;
	private Short balanceSheetColumn;
	private Byte includeWhenZero;
	private Byte debitBalance;
	private Byte contraAccount;
	private Short lineAboveAmount;
	private Short lineBelowAmount;
	private Short totalingLevel = 0;
	private Short verticalSpacing;
	private Short horizontalSpacing;
	private Byte fontLarge;
	private Byte fontBold;
	private Byte fontItalic;
	private Byte fontUnderline;
	private Byte tax1099;
	private String subAccount;
	private Byte isSubAccount;
	private Byte isMasterAccount;
	private Byte dollarSign;
	private BigDecimal creditAmount;
	private BigDecimal debitAmount;
	private Integer ledgerDetailID;
	private String typeAccount;
	private Byte financialStatus;
	private BigDecimal openingBalance;

	public Coaccount() {
	}

	

	public Coaccount(Byte inActive, Short balanceSheetColumn,
			Byte includeWhenZero, Byte debitBalance,
			Byte contraAccount, Short lineAboveAmount, Short lineBelowAmount,
			Short totalingLevel, Short verticalSpacing, Short horizontalSpacing,
			Byte fontLarge, Byte fontBold, Byte fontItalic,
			Byte fontUnderline, Byte tax1099, Byte isSubAccount,
			Byte isMasterAccount, Byte dollarSign) {
		this.inActive = inActive;
		this.balanceSheetColumn = balanceSheetColumn;
		this.includeWhenZero = includeWhenZero;
		this.debitBalance = debitBalance;
		this.contraAccount = contraAccount;
		this.lineAboveAmount = lineAboveAmount;
		this.lineBelowAmount = lineBelowAmount;
		this.totalingLevel = totalingLevel;
		this.verticalSpacing = verticalSpacing;
		this.horizontalSpacing = horizontalSpacing;
		this.fontLarge = fontLarge;
		this.fontBold = fontBold;
		this.fontItalic = fontItalic;
		this.fontUnderline = fontUnderline;
		this.tax1099 = tax1099;
		this.isSubAccount = isSubAccount;
		this.isMasterAccount = isMasterAccount;
		this.setDollarSign(dollarSign);
	}

	public Coaccount(Byte inActive, String number, String description,
			Short balanceSheetColumn, Byte includeWhenZero,
			Byte debitBalance, Byte contraAccount, Short lineAboveAmount,
			Short lineBelowAmount, Short totalingLevel, Short verticalSpacing,
			Short horizontalSpacing, Byte fontLarge, Byte fontBold,
			Byte fontItalic, Byte fontUnderline, Byte tax1099,
			String subAccount, Byte isSubAccount, Byte isMasterAccount, Byte dollarSign,String typeAccount) {
		this.inActive = inActive;
		this.number = number;
		this.description = description;
		this.balanceSheetColumn = balanceSheetColumn;
		this.includeWhenZero = includeWhenZero;
		this.debitBalance = debitBalance;
		this.contraAccount = contraAccount;
		this.lineAboveAmount = lineAboveAmount;
		this.lineBelowAmount = lineBelowAmount;
		this.totalingLevel = totalingLevel;
		this.verticalSpacing = verticalSpacing;
		this.horizontalSpacing = horizontalSpacing;
		this.fontLarge = fontLarge;
		this.fontBold = fontBold;
		this.fontItalic = fontItalic;
		this.fontUnderline = fontUnderline;
		this.tax1099 = tax1099;
		this.subAccount = subAccount;
		this.isSubAccount = isSubAccount;
		this.isMasterAccount = isMasterAccount;
		this.setDollarSign(dollarSign);
		this.typeAccount = typeAccount;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "coAccountID", unique = true, nullable = false)
	public Integer getCoAccountId() {
		return this.coAccountId;
	}

	public void setCoAccountId(Integer coAccountId) {
		this.coAccountId = coAccountId;
	}
	
	@Column(name = "accountType")
	public String getTypeAccount() {
		return typeAccount;
	}

	public void setTypeAccount(String typeAccount) {
		this.typeAccount = typeAccount;
	}

	@Column(name = "InActive", nullable = false)
	public Byte isInActive() {
		return this.inActive;
	}

	public void setInActive(Byte inActive) {
		this.inActive = inActive;
	}

	@Column(name = "Number", length = 12)
	public String getNumber() {
		return this.number;
	}

	public void setNumber(String number) {
		this.number = number;
	}

	@Column(name = "Description", length = 50)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "BalanceSheetColumn", nullable = false)
	public Short getBalanceSheetColumn() {
		return this.balanceSheetColumn;
	}

	public void setBalanceSheetColumn(Short balanceSheetColumn) {
		this.balanceSheetColumn = balanceSheetColumn;
	}

	@Column(name = "IncludeWhenZero", nullable = false)
	public Byte isIncludeWhenZero() {
		return this.includeWhenZero;
	}

	public void setIncludeWhenZero(Byte includeWhenZero) {
		this.includeWhenZero = includeWhenZero;
	}

	@Column(name = "DebitBalance", nullable = false)
	public Byte isDebitBalance() {
		return this.debitBalance;
	}

	public void setDebitBalance(Byte debitBalance) {
		this.debitBalance = debitBalance;
	}

	@Column(name = "ContraAccount", nullable = false)
	public Byte isContraAccount() {
		return this.contraAccount;
	}

	public void setContraAccount(Byte contraAccount) {
		this.contraAccount = contraAccount;
	}

	@Column(name = "LineAboveAmount", nullable = false)
	public Short getLineAboveAmount() {
		return this.lineAboveAmount;
	}

	public void setLineAboveAmount(Short lineAboveAmount) {
		this.lineAboveAmount = lineAboveAmount;
	}

	@Column(name = "LineBelowAmount", nullable = false)
	public Short getLineBelowAmount() {
		return this.lineBelowAmount;
	}

	public void setLineBelowAmount(Short lineBelowAmount) {
		this.lineBelowAmount = lineBelowAmount;
	}

	@Column(name = "TotalingLevel", nullable = false)
	public Short getTotalingLevel() {
		return this.totalingLevel;
	}

	public void setTotalingLevel(Short totalingLevel) {
		this.totalingLevel = totalingLevel;
	}

	@Column(name = "VerticalSpacing", nullable = false)
	public Short getVerticalSpacing() {
		return this.verticalSpacing;
	}

	public void setVerticalSpacing(Short verticalSpacing) {
		this.verticalSpacing = verticalSpacing;
	}

	@Column(name = "HorizontalSpacing", nullable = false)
	public Short getHorizontalSpacing() {
		return this.horizontalSpacing;
	}

	public void setHorizontalSpacing(Short horizontalSpacing) {
		this.horizontalSpacing = horizontalSpacing;
	}

	@Column(name = "FontLarge", nullable = false)
	public Byte isFontLarge() {
		return this.fontLarge;
	}

	public void setFontLarge(Byte fontLarge) {
		this.fontLarge = fontLarge;
	}

	@Column(name = "FontBold", nullable = false)
	public Byte isFontBold() {
		return this.fontBold;
	}

	public void setFontBold(Byte fontBold) {
		this.fontBold = fontBold;
	}

	@Column(name = "FontItalic", nullable = false)
	public Byte isFontItalic() {
		return this.fontItalic;
	}

	public void setFontItalic(Byte fontItalic) {
		this.fontItalic = fontItalic;
	}

	@Column(name = "FontUnderline", nullable = false)
	public Byte isFontUnderline() {
		return this.fontUnderline;
	}

	public void setFontUnderline(Byte fontUnderline) {
		this.fontUnderline = fontUnderline;
	}

	@Column(name = "Tax1099", nullable = false)
	public Byte isTax1099() {
		return this.tax1099;
	}

	public void setTax1099(Byte tax1099) {
		this.tax1099 = tax1099;
	}

	@Column(name = "SubAccount", length = 10)
	public String getSubAccount() {
		return this.subAccount;
	}

	public void setSubAccount(String subAccount) {
		this.subAccount = subAccount;
	}

	@Column(name = "IsSubAccount", nullable = false)
	public Byte isIsSubAccount() {
		return this.isSubAccount;
	}

	public void setIsSubAccount(Byte isSubAccount) {
		this.isSubAccount = isSubAccount;
	}

	@Column(name = "IsMasterAccount", nullable = false)
	public Byte isIsMasterAccount() {
		return this.isMasterAccount;
	}

	public void setIsMasterAccount(Byte isMasterAccount) {
		this.isMasterAccount = isMasterAccount;
	}

	@Column(name = "DollarSign", nullable = false)
	public Byte isDollarSign() {
		return dollarSign;
	}

	public void setDollarSign(Byte dollarSign) {
		this.dollarSign = dollarSign;
	}

	@Transient
	public BigDecimal getCreditAmount() {
		return creditAmount;
	}

	public void setCreditAmount(BigDecimal creditAmount) {
		this.creditAmount = creditAmount;
	}
	
	@Transient
	public BigDecimal getDebitAmount() {
		return debitAmount;
	}

	public void setDebitAmount(BigDecimal debitAmount) {
		this.debitAmount = debitAmount;
	}
	@Transient
	public Integer getLedgerDetailID() {
		return ledgerDetailID;
	}

	public void setLedgerDetailID(Integer ledgerDetailID) {
		this.ledgerDetailID = ledgerDetailID;
	}


	@Column(name = "openingBalance")
	public BigDecimal getOpeningBalance() {
		return openingBalance;
	}

	
	public void setOpeningBalance(BigDecimal openingBalance) {
		this.openingBalance = openingBalance;
	}


	@Column(name = "FinancialStatus")
	public Byte getFinancialStatus() {
		return financialStatus;
	}

	public void setFinancialStatus(Byte financialStatus) {
		this.financialStatus = financialStatus;
	}
	
	

}
